import r from"https://cdn.jsdelivr.net/npm/phaser@3.60.0/dist/phaser.esm.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const h of i.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&n(h)}).observe(document,{childList:!0,subtree:!0});function s(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(t){if(t.ep)return;t.ep=!0;const i=s(t);fetch(t.href,i)}})();let o=1e3,m=r.Math.Between(66,133)/100,x=[],c=[],w=300,P=1.01;class M extends r.GameObjects.Sprite{constructor(e,s,n,t,i){super(e,s,n,"bow"),e.add.existing(this),this.setScale(.1),this.attackSpeed=i,this.range=t,this.setInteractive()}upgradeRange(e){this.range=Math.min(400,this.range+e)}upgradeAttackSpeed(e){this.attackSpeed=Math.max(10,this.attackSpeed-e),this.bulletTimer.delay=this.attackSpeed}aimAtClosestEnemy(e){let s,n=1/0;for(let t of e){const i=t.x-this.x,h=t.y-this.y,y=Math.sqrt(i*i+h*h)-12;y<n&&y<this.range&&(s=t,n=y)}if(s){const t=Math.atan2(s.y-this.y,s.x-this.x),i=r.Math.Linear(this.rotation,t,.09);return this.rotation=i,s}}}class O extends r.GameObjects.Sprite{constructor(e,s,n,t,i,h){super(e,s,n,"bullet"),e.add.existing(this),this.damage=i,this.bulletSpeed=t,this.range=h,this.setScale(.5)}upgradeDamage(e){this.damage+=e}shootAtEnemy(e){if(e){this.rotation=Math.atan2(e.y-this.y,e.x-this.x);const s=e.x-this.x,n=e.y-this.y,t=Math.sqrt(s*s+n*n);t<=10?(this.target.health-=this.damage,this.destroy()):t>this.range?this.destroy():(this.x+=s/t*this.bulletSpeed,this.y+=n/t*this.bulletSpeed)}else this.destroy()}}class v extends r.GameObjects.Sprite{constructor(e,s,n,t){super(e,s,n,"drone"),e.add.existing(this),this.setScale(.2),this.pathPoint=0,this.fullHealth=t,this.health=t,this.setInteractive(),this.distance,this.sixtysixPercent=!1,this.thirtythreePercent=!1}moveAlongPath(e,s){if(this.health>0)if(this.pathPoint<e.length){const n=e[this.pathPoint],t=n.x-this.x,i=n.y-this.y,h=Math.sqrt(t*t+i*i);h<=5?this.pathPoint++:(this.x+=t/h*s,this.y+=i/h*s,this.rotation=Math.atan2(i,t))}else this.scene.totalHealth-=this.health,this.destroy();else o+=Math.round(w*.5*m),w*=P,this.destroy()}}class E extends r.Scene{constructor(){super({key:"MainScene"})}preload(){console.log("preload"),this.load.image("drone","Drone.png"),this.load.image("bow","Sci-Fi Bow.png"),this.load.image("bullet","Bullet.png"),this.load.image("range","Range.png"),this.load.image("RangeBtn","RangeButton.png")}create(){let e=!1;this.totalHealth=1e5,o=1e3,m=r.Math.Between(66,133)/100,x=[],c=[],this.totalHealthText=this.add.text(20,40,this.totalHealth),this.bowImage=this.add.image(700,600,"bow").setScale(.24),this.bowInventoryText=this.add.text(721,555,c.length,{fontSize:"20px",fill:"0x000000",fontFamily:"Arial",fontWeight:"bold"}),this.add.text(1050,30,"Menu",{fontSize:"32px",fill:"#0f0",fontFamily:"Arial"}).setOrigin(.5,.5).setInteractive().on("pointerdown",()=>{this.scene.pause("MainScene"),this.scene.setVisible(!1,"MainScene"),e?(this.scene.resume("MenuScene"),this.scene.setVisible(!0,"MenuScene")):(this.scene.launch("MenuScene"),e=!0)}),this.paused=!1,console.log("create"),this.drawPath(),this.moneyText=this.add.text(20,20,o.toFixed(2));const n=100,t="rangeCircle";if(!this.textures.exists(t)){const i=this.make.graphics({x:0,y:0,add:!1});i.fillStyle(5749247,.3),i.fillCircle(n,n,n),i.generateTexture(t,n*2,n*2),i.destroy()}this.bows=[],this.input.on("pointerdown",i=>{const p=this.sys.game.canvas.getContext("2d").getImageData(i.x,i.y,1,1).data;if(!(p[0]===255&&p[1]===255&&p[2]===255&&p[3]>0)){let g=!0;for(let f of this.bows){const u=f.x-i.x,a=f.y-i.y;if(Math.sqrt(u*u+a*a)<30){g=!1;break}}const b=i.x-1050,S=i.y-30;if(Math.sqrt(b*b+S*S)<50&&(g=!1),x.includes("bow")||(g=!1),g){const f=x.indexOf("bow");f!==-1&&x.splice(f,1);const u=c.indexOf("bow");u!==-1&&c.splice(u,1);const a=new M(this,i.x,i.y,200,300);this.bows.push(a),a.on("pointerover",()=>{if(!a.rangeSprite){a.rangeSprite=this.add.image(a.x,a.y,t);const l=a.range/n;a.rangeSprite.setScale(l),a.rangeSprite.setDepth(-1)}this.paused=!0;for(let l of this.bows)l.bulletTimer.paused=!0;this.enemyTimer.paused=!0}),a.on("pointerout",()=>{this.scene.resume(),a.rangeSprite&&(console.log("offbow"),a.rangeSprite.destroy(),a.rangeSprite=null),this.rangeBtn&&(this.rangeBtn.destroy(),this.rangeBtn=null),this.paused=!1;for(let l of this.bows)l.bulletTimer.paused=!1;this.enemyTimer.paused=!1}),a.bulletTimer=this.time.addEvent({delay:a.attackSpeed,loop:!0,callback:()=>{const l=a.aimAtClosestEnemy(this.amountOfEnimies);if(l){const T=new O(this,a.x,a.y,20,5,a.range);T.target=l,this.bullets.push(T)}}})}}}),this.amountOfEnimies=[],this.wave=1,this.delay=1,this.decay=20,this.increment=350,this.decayDecay=.99999,this.enemyTimer=this.time.addEvent({delay:this.delay,loop:!0,callback:()=>{console.log("wave "+this.wave);for(let i=0;i<this.wave;i++)this.spawnEnemy(i*40),this.delay=Math.min(1e5,this.delay+this.increment);this.increment-=this.decay,this.decay*=this.decayDecay,console.log("delay: "+this.delay),this.enemyTimer.delay=this.delay,this.delay>=2e4&&(this.increment=0,this.decay=0),this.wave++}}),this.bullets=[]}update(){if(this.totalHealth<=0&&this.scene.start("DeathScene"),!this.paused){this.totalHealthText.setText(this.totalHealth),this.bowInventoryText.setText(c.length),this.moneyText.setText(o.toFixed(2)),m=r.Math.Between(66,133)/100;for(let e=0;e<this.amountOfEnimies.length;e++)this.amountOfEnimies[e].moveAlongPath(this.pathPoints,.8),this.amountOfEnimies[e].health<this.amountOfEnimies[e].fullHealth*.66&&!this.amountOfEnimies[e].sixtysixPercent&&(o+=Math.round(w*.2*m),this.amountOfEnimies[e].sixtysixPercent=!0),this.amountOfEnimies[e].health<this.amountOfEnimies[e].fullHealth*.33&&!this.amountOfEnimies[e].thirtythreePercent&&(o+=Math.round(w*.3*m),this.amountOfEnimies[e].thirtythreePercent=!0),this.amountOfEnimies[e].healthText&&(this.amountOfEnimies[e].healthText.setPosition(this.amountOfEnimies[e].x,this.amountOfEnimies[e].y),this.amountOfEnimies[e].healthText.setText(this.amountOfEnimies[e].health),this.amountOfEnimies[e].health<=0&&this.amountOfEnimies[e].healthText.destroy());this.amountOfEnimies=this.amountOfEnimies.filter(e=>e.active);for(let e of this.bows)e.aimAtClosestEnemy(this.amountOfEnimies),e.rangeSprite&&e.rangeSprite.setScale(e.range/baseRadius);for(let e of this.bullets)e.shootAtEnemy(e.target);this.bullets=this.bullets.filter(e=>e.active)}}spawnEnemy(e){const s=e/40,n=Math.round(30*Math.pow(s,1.2)*Math.pow(1.02,s)),t=new v(this,this.pathPoints[0].x-e,this.pathPoints[0].y,n);t.on("pointerover",()=>{t.healthText||(t.healthText=this.add.text(t.x,t.y,t.health,{fontSize:"50px",fill:"#000000"})),t.health<=1&&(t.healthText.destroy(),t.healthText=null)}),t.on("pointerout",()=>{t.healthText&&(t.healthText.destroy(),t.healthText=null)}),this.amountOfEnimies.push(t)}drawPath(){const e=this.add.graphics();e.lineStyle(50,16777215,1),e.beginPath(),e.moveTo(0,100),e.moveTo(1,100),e.lineTo(850,100),e.lineTo(850,300),e.lineTo(1e3,300),e.lineTo(1e3,450),e.lineTo(650,450),e.lineTo(650,240),e.lineTo(100,240),e.lineTo(100,550),e.lineTo(300,550),e.lineTo(300,400),e.lineTo(460,400),e.lineTo(460,650),e.strokePath(),this.pathPoints=[{x:0,y:100},{x:850,y:100},{x:850,y:300},{x:1e3,y:300},{x:1e3,y:450},{x:650,y:450},{x:650,y:240},{x:100,y:240},{x:100,y:550},{x:300,y:550},{x:300,y:400},{x:460,y:400},{x:460,y:650}]}}class B extends r.Scene{constructor(){super({key:"MenuScene"})}drawBow(){const e=this.add.rectangle(300,300,80,90,16777215).setOrigin(.5,.5).setDepth(1);this.add.rectangle(e.x,e.y,e.width+4,e.height+4,0);const s=this.add.text(e.x,e.y+17,"Buy",{fontSize:"20px",fill:"#0f0",fontFamily:"Arial"}).setOrigin(.5,.5).setInteractive().setDepth(2);this.add.image(e.x,e.y-15,"bow").setScale(.1).setDepth(2).setOrigin(.5,.5),this.bowInventoryText=this.add.text(e.x+30,e.y-35,c.length,{fontSize:"15px",fill:"0x000000",fontFamily:"Arial"}).setOrigin(.5,.5).setDepth(2),this.bowPriceText=this.add.text(e.x,s.y+17,this.bowPrice,{fontSize:"20px",fill:"#0f0",fontFamily:"Arial"}).setOrigin(.5,.5).setDepth(2),s.on("pointerdown",()=>{o>=this.bowPrice&&(x.push("bow"),c.push("bow"),o-=this.bowPrice,this.bowPrice*=1+.3/Math.sqrt(this.bowPriceIteration),this.bowPriceIteration+=1,this.bowPriceText.setText(this.bowPrice.toFixed(2)))}),this.rangeBtn=this.add.image(s.x-5,s.y+30,"RangeBtn").setScale(.4).setInteractive().setOrigin(1,0),this.rangePriceText=this.add.text(this.rangeBtn.x-60,this.rangeBtn.y+17,this.rangePrice,{fontSize:"20px",fill:"#0f0",fontFamily:"Arial"}).setDepth(2),this.rangeBtn.on("pointerdown",()=>{const n=this.scene.get("MainScene");if(o>this.rangePrice){for(let t of n.bows)t.upgradeRange(10);o-=this.rangePrice,this.rangePrice*=1+.3/Math.sqrt(this.rangePriceIteration),this.rangePriceIteration+=1,this.rangePriceText.setText(this.rangePrice.toFixed(2))}}),this.attackSpeedBtn=this.add.image(s.x+5,s.y+30,"attackSpeedBtn").setScale(.4).setInteractive().setOrigin(0,0),this.attackSpeedPriceText=this.add.text(this.attackSpeedBtn.x+28,this.attackSpeedBtn.y+17,this.speedPrice,{fontSize:"20px",fill:"#0f0",fontFamily:"Arial"}).setDepth(2),this.attackSpeedBtn.on("pointerdown",()=>{const n=this.scene.get("MainScene");if(o>this.speedPrice){for(let t of n.bows)t.upgradeAttackSpeed(2);o-=this.speedPrice,this.speedPrice*=1+.3/Math.sqrt(this.speedPriceIteration),this.speedPriceIteration+=1,this.attackSpeedPriceText.setText(this.speedPrice.toFixed(2))}})}preload(){this.load.image("drone","Drone.png"),this.load.image("bow","Sci-Fi Bow.png"),this.load.image("bullet","Bullet.png"),this.load.image("range","Range.png"),this.load.image("attackSpeedBtn","AttackSpeedButton.png"),this.load.image("damageBtn","DamageButton.png")}create(){this.bowPrice=100,this.bowPriceIteration=1,this.speedPrice=100,this.speedPriceIteration=1,this.rangePrice=100,this.rangePriceIteration=1,this.moneyText=this.add.text(20,20,o),this.add.rectangle(550,325,1100,650,25600).setOrigin(.5,.5).setDepth(-1),this.add.text(1050,30,"Game",{fontSize:"32px",fill:"#0f0",fontFamily:"Arial"}).setOrigin(.5,.5).setInteractive().on("pointerdown",()=>{this.scene.setVisible(!1,"MenuScene"),this.scene.bringToTop("MainScene"),this.scene.pause(),this.scene.resume("MainScene"),this.scene.setVisible(!0,"MainScene")}),this.drawBow()}update(){this.bowInventoryText&&this.bowInventoryText.setText(c.length),this.moneyText.setText(o)}}class I extends r.Scene{constructor(){super({key:"DeathScene"})}preload(){}create(){this.add.text(100,100,"Game Over",{fontSize:"64px",fill:"#ffffff"}),this.add.text(100,200,"Click to Restart",{fontSize:"32px",fill:"#ffffff"}).setInteractive(),this.input.on("pointerdown",()=>{this.scene.stop("MenuScene"),this.scene.start("MainScene")})}update(){}}const D={type:r.CANVAS,width:1100,height:650,scene:[E,B,I],scale:{mode:r.Scale.FIT},backgroundColor:25600,physics:{default:"arcade",arcade:{gravity:{x:0,y:0}}}};new r.Game(D);
